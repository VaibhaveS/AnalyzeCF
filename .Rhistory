breaks <- seq(100,2800,by=500)
breaks
for(i in breaks){
print(i)
}
cuts=cut(data$sales,breaks,right=FALSE)
cuts
colnames(cuts)
cuts["5"]
corr <- round(cor(data), 1)
ggcorrplot(corr)
range(data$radio)
breaks <- seq(0,50,by=10)
cuts=cut(data$radio,breaks,right=FALSE)
cbind(table(cuts))
barplot(table(cuts),main="distribution of radio investments",ylab="frequency")
table(cuts)[which.max(table(cuts))]
table(cuts)[which.max(table(cuts))]
pie(table(cuts),radius=1,main="distribution of smokers")
pie(table(cuts),radius=1,main="distribution of radio investments")
range(data$sales)
data %>% filter(sales>2000)
cuts=cut(big_sales$radio,breaks,right=FALSE)
big_sales = data %>% filter(sales>2000)
cuts=cut(big_sales$radio,breaks,right=FALSE)
pie(table(cuts),radius=1,main="distribution of radio investments")
pie(table(cuts),radius=1,main="distribution of radio investments for sales >2000")
#% of values greater than their median
TVmedian=median(data$TV)
#% of values greater than their median
TVmedian=median(data$TV)
#% of values greater than their median
TVmedian=median(data$TV)
ok
#% of values greater than their median
TVmedian=median(data$TV)
TVmedian=median(data$TV)
TVmedian
#% of values greater than their median
the_median <- apply(data,2,median)
the_median["TV"]
#% of values greater than their median
tv_median <- apply(data,2,median)
total=nrow(big_sales)
greater_median = nrow(big_sales %>% filter(TV>=tV_median))
#% of values greater than their median
tv_median <- apply(data,2,median)
greater_median = nrow(big_sales %>% filter(TV>=tV_median))
greater_median = nrow(big_sales %>% filter(big_sales$TV>=tV_median))
#% of values greater than their median
tV_median <- apply(data,2,median)
total=nrow(big_sales)
greater_median = nrow(big_sales %>% filter(big_sales$TV>=tV_median))
greater_median
total
print(total/greater_median)
print(100*greater_median/total)
tV_median <- apply(data,2,median)["TV"]
total=nrow(big_sales)
total
greater_median = nrow(big_sales %>% filter(big_sales$TV>=tV_median))
greater_median
print(100*greater_median/total)
print(tv_median)
print(big_sales["TV"])
print(min(big_sales["TV"]))
radio_median <- apply(data,2,median)["radio"]
greater_median = nrow(big_sales %>% filter(big_sales$radio>=radio_median))
greater_median
print(100*greater_median/total)
print(radio_median)
print(min(big_sales["radio"]))
the_median <- apply(data,2,median)
the_median["radio"]
news_median <- apply(data,2,median)["newspaper"]
print(news_median)
print(min(big_sales["newspaper"]))
greater_median = nrow(big_sales %>% filter(big_sales$newspaper>=news_median))
greater_median
print(100*greater_median/total)
range(data$sales)
small_sales <- data%>%(sales<1000)
small_sales <- data%>%(data$sales<1000)
small_sales <- data%>% filter(data$sales<1000)
cuts=cut(small_sales$radio,breaks,right=FALSE)
pie(table(cuts),radius=1,main="distribution of radio investments for sales >2000")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(MASS)
library (readr)
library(tidyverse)
library(dplyr)
library(ggcorrplot)
library(graphics)
library(caret)
library(e1071)
set.seed(123)
data <- read.csv("C:/Users/HP/Desktop/Advertising_data.csv")
str(data)
head(data)
view(data)
range(data$radio)
breaks <- seq(0,50,by=10)
cuts=cut(data$radio,breaks,right=FALSE)
cbind(table(cuts))
range(data$radio)
breaks <- seq(0,50,by=10)
cuts=cut(data$radio,breaks,right=FALSE)
cbind(table(cuts))
table(cuts)[which.max(table(cuts))]
barplot(table(cuts),main="distribution of radio investments",ylab="frequency")
barplot(table(cuts),main="distribution of radio investments",ylab="frequency")
barplot(table(cuts),main="distribution of radio investments",ylab="frequency")
pie(table(cuts),radius=1,main="distribution of radio investments")
barplot(table(cuts),main="distribution of radio investments",ylab="frequency")
pie(table(cuts),radius=1,main="distribution of radio investments")
barplot(table(cuts),main="distribution of radio investments",ylab="frequency")
pie(table(cuts),radius=1,main="distribution of radio investments")
big_sales = data %>% filter(sales>2000)
cuts=cut(big_sales$radio,breaks,right=FALSE)
pie(table(cuts),radius=1,main="distribution of radio investments for sales >2000")
tV_median <- apply(data,2,median)["TV"]
total=nrow(big_sales)
total
greater_median = nrow(big_sales %>% filter(big_sales$TV>=tV_median))
greater_median
print(100*greater_median/total)
radio_median <- apply(data,2,median)["radio"]
print(radio_median)
print(min(big_sales["radio"]))
greater_median = nrow(big_sales %>% filter(big_sales$radio>=radio_median))
greater_median
print(100*greater_median/total)
news_median <- apply(data,2,median)["newspaper"]
print(news_median)
print(min(big_sales["newspaper"]))
greater_median = nrow(big_sales %>% filter(big_sales$newspaper>=news_median))
greater_median
print(100*greater_median/total)
tV_median <- apply(data,2,median)["TV"]
total=nrow(big_sales)
greater_median = nrow(big_sales %>% filter(big_sales$TV>=tV_median))
print(tV_median)
print(100*greater_median/total)
radio_median <- apply(data,2,median)["radio"]
print(radio_median)
print(min(big_sales["radio"]))
greater_median = nrow(big_sales %>% filter(big_sales$radio>=radio_median))
print(100*greater_median/total)
news_median <- apply(data,2,median)["newspaper"]
print(news_median)
print(min(big_sales["newspaper"]))
greater_median = nrow(big_sales %>% filter(big_sales$newspaper>=news_median))
print(100*greater_median/total)
tV_median <- apply(data,2,median)["TV"]
total=nrow(big_sales)
greater_median = nrow(big_sales %>% filter(big_sales$TV>=tV_median))
print(100*greater_median/total)
radio_median <- apply(data,2,median)["radio"]
print(min(big_sales["radio"]))
greater_median = nrow(big_sales %>% filter(big_sales$radio>=radio_median))
print(100*greater_median/total)
news_median <- apply(data,2,median)["newspaper"]
print(min(big_sales["newspaper"]))
greater_median = nrow(big_sales %>% filter(big_sales$newspaper>=news_median))
print(100*greater_median/total)
tV_median <- apply(data,2,median)["TV"]
total=nrow(big_sales)
greater_median = nrow(big_sales %>% filter(big_sales$TV>=tV_median))
print(tV_median)
print(100*greater_median/total)
radio_median <- apply(data,2,median)["radio"]
print(radio_median)
print(min(big_sales["radio"]))
greater_median = nrow(big_sales %>% filter(big_sales$radio>=radio_median))
print(100*greater_median/total)
news_median <- apply(data,2,median)["newspaper"]
print(news_median)
print(min(big_sales["newspaper"]))
greater_median = nrow(big_sales %>% filter(big_sales$newspaper>=news_median))
print(100*greater_median/total)
range(data$TV)
breaks <- seq(0,300,by=10)
range(data$newspaper)
range(data$sales)
small_sales <- data%>% filter(data$sales<1000)
breaks <- seq(0,50,by=10)
cuts=cut(small_sales$radio,breaks,right=FALSE)
pie(table(cuts),radius=1,main="distribution of radio investments for sales <1000")
breaks <- seq(0,300,by=10)
cuts=cut(small_sales$TV,breaks,right=FALSE)
pie(table(cuts),radius=1,main="distribution of radio investments for sales <1000")
breaks <- seq(0,120,by=10)
cuts=cut(small_sales$newspaper,breaks,right=FALSE)
pie(table(cuts),radius=1,main="distribution of radio investments for sales <1000")
list <- data$charges %>% createDataPartition(p=0.7,list=FALSE)
list <- data$sales %>% createDataPartition(p=0.7,list=FALSE)
train <- data[list,]
test <- data[-list,]
kurtosis(data$charges)
hist(data$charges)
kurtosis(data$sales)
hist(data$sales)
ggplot(data,aes(data$sales))+geom_density()
kurtosis(sales)
kurtosis(data$sales)
hist(data$sales)
ggplot(data,aes(sales))+geom_density()
pairs(data)
corr <- round(cor(data), 1)
ggcorrplot(corr)
model <- lm(sales~tv,data=data)
model <- lm(sales~TV,data=data)
summary(model)
pred <- predict(model,test)
RMSE <- RMSE(pred,test$sales)
RMSE
R2 <- R2(pred,test$sales)
R2
model <- lm(sales~.,data=data)
model
summary(model)
pred <- predict(model,test)
RMSE <- RMSE(pred,test$sales)
RMSE
R2 <- R2(pred,test$sales)
R2
cor(data$TV,data$sales)
cor(data$radio,data$sales)
cor(data$newspaper,data$sales)
model <- lm(sales~TV+radio,data=data)
model
summary(model)
pred <- predict(model,test)
RMSE <- RMSE(pred,test$sales)
RMSE
R2 <- R2(pred,test$sales)
R2
pred <- predict(model,test)
head(pred,10)
head(test$charges,10)
plot(model,1)
pred <- predict(model,test)
head(pred,10)
head(test$sales,10)
plot(model,1)
range(data$sales)
small_sales <- data%>% filter(data$sales<1000)
breaks <- seq(0,50,by=10)
cuts=cut(small_sales$radio,breaks,right=FALSE)
pie(table(cuts),radius=1,main="distribution of radio investments for sales <1000")
breaks <- seq(0,300,by=10)
cuts=cut(small_sales$TV,breaks,right=FALSE)
pie(table(cuts),radius=1,main="distribution of TV investments for sales <1000")
breaks <- seq(0,120,by=10)
cuts=cut(small_sales$newspaper,breaks,right=FALSE)
pie(table(cuts),radius=1,main="distribution of newspaper investments for sales <1000")
qqnorm(model)
pred <- predict(model,test)
head(pred,10)
head(test$sales,10)
plot(model,1)
qqplot(data$sales)
pred <- predict(model,test)
head(pred,10)
head(test$sales,10)
plot(model,1)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(MASS)
library (readr)
library(tidyverse)
library(dplyr)
library(ggcorrplot)
library(graphics)
library(caret)
library(e1071)
set.seed(123)
data <- read.csv("C:/Users/HP/Desktop/Advertising_data.csv")
str(data)
head(data)
view(data)
sum(is.na(data))
range(data$radio)
breaks <- seq(0,50,by=10)
cuts=cut(data$radio,breaks,right=FALSE)
cbind(table(cuts))
table(cuts)[which.max(table(cuts))]
barplot(table(cuts),main="distribution of radio investments",ylab="frequency")
pie(table(cuts),radius=1,main="distribution of radio investments")
big_sales = data %>% filter(sales>2000)
cuts=cut(big_sales$radio,breaks,right=FALSE)
pie(table(cuts),radius=1,main="distribution of radio investments for sales >2000")
tV_median <- apply(data,2,median)["TV"]
total=nrow(big_sales)
greater_median = nrow(big_sales %>% filter(big_sales$TV>=tV_median))
print(tV_median)
print(100*greater_median/total)
radio_median <- apply(data,2,median)["radio"]
print(radio_median)
print(min(big_sales["radio"]))
greater_median = nrow(big_sales %>% filter(big_sales$radio>=radio_median))
print(100*greater_median/total)
news_median <- apply(data,2,median)["newspaper"]
print(news_median)
print(min(big_sales["newspaper"]))
greater_median = nrow(big_sales %>% filter(big_sales$newspaper>=news_median))
print(100*greater_median/total)
range(data$sales)
small_sales <- data%>% filter(data$sales<1000)
breaks <- seq(0,50,by=10)
cuts=cut(small_sales$radio,breaks,right=FALSE)
pie(table(cuts),radius=1,main="distribution of radio investments for sales <1000")
breaks <- seq(0,300,by=10)
cuts=cut(small_sales$TV,breaks,right=FALSE)
pie(table(cuts),radius=1,main="distribution of TV investments for sales <1000")
breaks <- seq(0,120,by=10)
cuts=cut(small_sales$newspaper,breaks,right=FALSE)
pie(table(cuts),radius=1,main="distribution of newspaper investments for sales <1000")
list <- data$sales %>% createDataPartition(p=0.7,list=FALSE)
train <- data[list,]
test <- data[-list,]
kurtosis(data$sales)
hist(data$sales)
ggplot(data,aes(sales))+geom_density()
pairs(data)
corr <- round(cor(data), 1)
ggcorrplot(corr)
model <- lm(sales~TV,data=data)
summary(model)
pred <- predict(model,test)
RMSE <- RMSE(pred,test$sales)
RMSE
R2 <- R2(pred,test$sales)
R2
model <- lm(sales~.,data=data)
model
summary(model)
pred <- predict(model,test)
RMSE <- RMSE(pred,test$sales)
RMSE
R2 <- R2(pred,test$sales)
R2
cor(data$TV,data$sales)
cor(data$radio,data$sales)
cor(data$newspaper,data$sales)
model <- lm(sales~TV+radio,data=data)
model
summary(model)
pred <- predict(model,test)
RMSE <- RMSE(pred,test$sales)
RMSE
R2 <- R2(pred,test$sales)
R2
pred <- predict(model,test)
head(pred,10)
head(test$sales,10)
plot(model,1)
mins <- apply(data,2,min)
mins <- apply(data,2,min)
mins <- apply(data,2,min)
maxs <- apply(data,2,max)
mins <- apply(data,2,min)
maxs <- apply(data,2,max)
mins
maxs
mins <- apply(data,2,min)
maxs <- apply(data,2,max)
means <- apply(data,2,mean)
mins
maxs
means
mins <- apply(data,2,min)
maxs <- apply(data,2,max)
means <- apply(data,2,mean)
meadians <- apply(data,2,median)
mins
maxs
means
meadians
shiny::runApp('C:/Users/HP/Desktop/CP_FDA/AnalyzeCF')
runApp('C:/Users/HP/Desktop/CP_FDA/AnalyzeCF')
probsData <- read.csv("C:/Users/HP/Desktop/CP_FDA/AnalyzeCF/problems.csv")
view(probsData)
library(shiny)
library(reticulate)
library('shinydashboard')
library(shinyWidgets)
library(dplyr)
library(ggplot2)
probsData <- read.csv("C:/Users/HP/Desktop/CP_FDA/AnalyzeCF/problems.csv")
view(probsData)
library(shiny)
library(reticulate)
library('shinydashboard')
library(shinyWidgets)
library(dplyr)
library(ggplot2)
ui <- fluidPage(
setBackgroundColor("#d9d9d9"),
tags$style(HTML("
ul.nav.nav-tabs li {
background-color: black !important;
}
.tabbable > .nav > li[class=active] > a {
background-color: black;
}
")),
tags$h1("Analyze CF",style="text-align:center;")
,fluidRow(column(3,textInput(inputId="val",label="Enter your codeforces handle",placeholder = "eg. tourist")),column(4,actionButton(inputId = "click",label="enter",style = "margin-top:25px;background-color: #bfbbbb"))),
tabsetPanel(tabPanel("Home",HTML('<center><img src="LOGO.gif"></center>')),tabPanel("Hacking",tags$h1("Top 5 hackers",style="text-align:center")
,dataTableOutput(outputId = "hackfreq"),plotOutput(outputId = "pie")),
tabPanel("Rating"),tabPanel("problems",plotOutput(outputId = "barplot")),tabPanel("Blogs", tags$h2("Blog details of the corresponding user"), dataTableOutput(outputId = "BlogDetails"), actionButton(inputId = "Piechart",label="Pie chart",style = "margin-top:25px"), plotOutput(outputId = "piechart"), tags$h2("Ratingwise distribution of blogs"), plotOutput(outputId = "RatingBarplot")))
)
server <- function(input, output) {
submission_data <- eventReactive(input$click,{
SubmissionData%>%filter(Handle==input$val)%>%select(c(3:5))
})
problems_data <- eventReactive(input$click,{
probsData%>%filter(Handle==input$val)%>%dplyr::select(-c(1))
})
most_hacks <- eventReactive(input$click,{
as.data.frame(table(HackData%>%filter(Verdict=='HACK_SUCCESSFUL',defender==input$val)%>%select("Hacker")))
})
blogidData <- eventReactive(input$click,{as.data.frame(blogIdData %>% filter(Author == input$val))})
commentData <- eventReactive(input$Piechart,{as.data.frame(blogIdData %>% filter(Author == input$val))})
output$hackfreq <- renderDataTable({most_hacks()},
options = list(searching = FALSE,filter="top", selection="multiple", escape=FALSE,info=FALSE,lengthChange=FALSE,columns=list(list(title="Hacked by"),list(title="Frequency"))))
output$pie <- renderPlot({
label <- c("Accepted","Hacked","Others (WA,TLE,RE)")
x <- as.integer(submission_data()["Accepted"])
y <- as.integer(submission_data()["Hacked"])
z <- as.integer(submission_data()["Other"])
data <- c(x,y,z)
print(data)
piepercent<- round(100*data/sum(data), 1)
pie(data,labels=piepercent,col=rainbow(length(data)),main="Submissions pie chart")
legend("topright",label,cex=0.8,fill=rainbow(length(data)))
})
output$piechart <- renderPlot({
commentGreater50 <- commentData() %>% filter(No_of_comments >= 50)
commentLess50 <- commentData() %>% filter(No_of_comments < 50)
label <- c("No of comments >= 50","No of comments < 50")
x <- nrow(commentGreater50)
y <- nrow(commentLess50)
data <- c(x,y)
print(data)
piepercent<- round(100 * data/nrow(commentData()), 1)
pie(data,labels=piepercent,col=rainbow(length(data)),main="Submissions pie chart")
legend("topright",label,cex=0.8,fill=rainbow(length(data)))
})
output$barplot <- renderPlot({
z=c()
for (i in names(problems_data())){
z <- c(z,problems_data()[, i])
}
best <- data.frame(tag = x,rating=z)
ggplot(data=best, aes(x=tag, y=rating)) +
geom_bar(stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5))
})
output$BlogDetails <- renderDataTable({blogidData()}, options = list(info = FALSE, searching = FALSE))
output$RatingBarplot <- renderPlot({ggplot(blogData, aes(Rating, BlogCount)) + geom_bar(stat = "identity", width = 100) + theme(axis.text = element_text(size=12, colour =  'black'))})
}
HackData <- read.csv("C:/Users/HP/Desktop/CP_FDA/AnalyzeCF/Hacks.csv")
SubmissionData <- read.csv("Submissions.csv")
blogIdData <- read.csv("BlogId.csv")
blogData <- read.csv("Blogs.csv")
probsData <- read.csv("C:/Users/HP/Desktop/CP_FDA/AnalyzeCF/problems.csv")
view(probsData)
shinyApp(ui, server)
probsData
runApp('C:/Users/HP/Desktop/CP_FDA/AnalyzeCF')
probsData <- read.csv("C:/Users/HP/Desktop/CP_FDA/AnalyzeCF/problems.csv")
view(probsData)
View(probsData)
runApp('C:/Users/HP/Desktop/CP_FDA/AnalyzeCF')
runApp('C:/Users/HP/Desktop/CP_FDA/AnalyzeCF')
runApp()
runApp('C:/Users/HP/Desktop/CP_FDA/AnalyzeCF')
runApp()
runApp('C:/Users/HP/Desktop/CP_FDA/AnalyzeCF')
runApp('C:/Users/HP/Desktop/CP_FDA/AnalyzeCF')
runApp('C:/Users/HP/Desktop/CP_FDA/AnalyzeCF')
probsData[order(handle),]
probsData <- read.csv("C:/Users/HP/Desktop/CP_FDA/AnalyzeCF/problems.csv")
probsData[order(handle),]
probsData[order("handle"),]
probsData <- read.csv("C:/Users/HP/Desktop/CP_FDA/AnalyzeCF/problems.csv")
runApp('C:/Users/HP/Desktop/CP_FDA/AnalyzeCF')
runApp('C:/Users/HP/Desktop/CP_FDA/AnalyzeCF')
runApp('C:/Users/HP/Desktop/CP_FDA/AnalyzeCF')
runApp('C:/Users/HP/Desktop/CP_FDA/AnalyzeCF')
runApp('C:/Users/HP/Desktop/CP_FDA/AnalyzeCF')
runApp('C:/Users/HP/Desktop/CP_FDA/AnalyzeCF')
runApp('C:/Users/HP/Desktop/CP_FDA/AnalyzeCF')
runApp('C:/Users/HP/Desktop/CP_FDA/AnalyzeCF')
HackData <- read.csv("Hacks.csv")
SubmissionData <- read.csv("Submissions.csv")
blogIdData <- read.csv("BlogId.csv")
blogIdData <- read.csv("BlogId.csv")
blogData <- read.csv("Blogs.csv")
probsData <- read.csv("problems.csv")
runApp('C:/Users/HP/Desktop/CP_FDA/AnalyzeCF')
RatingData <- read.csv("C:/Users/HP/AppData/Local/Temp/Rar$DIa13424.43058/Rating.csv")
runApp('C:/Users/HP/Desktop/CP_FDA/AnalyzeCF')
shiny::runApp()
setwd("C:/Users/HP/Desktop/CP_FDA/AnalyzeCF")
blogData <- read.csv("Blogs.csv")
probsData <- read.csv("problems.csv")
runApp()
shiny::runApp()
